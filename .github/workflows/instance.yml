
name: list AWS EC2 Instance

on:
  workflow_dispatch: 

jobs:
   List-EC2-Instances1:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: "AKIA6JKEXY2NB5F65KEP"
        aws-secret-access-key: "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"
        aws-region: "ap-south-1"

    - name: List EC2 Instances
      run: |
        instances=$(aws ec2 describe-instances --filters "Name=instance-state-name,Values=pending,running,shutting-down,stopping,stopped" \
          --query 'Reservations[*].Instances[*].[InstanceId,State.Name,PublicIpAddress]' \
          --output table)
        if [ -z "$instances" ]; then
          echo "No instances found."
        else
          echo "$instances"
        fi

   List-EC2-Instances2:
     runs-on: ubuntu-latest
     environment: instancetest
     needs: List-EC2-Instances1

     steps:
       - name: Checkout repository
         uses: actions/checkout@v4
      
       - name: Configure AWS credentials
         uses: aws-actions/configure-aws-credentials@v2
         with:
           aws-access-key-id: ${{ secrets.ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
           aws-region: ${{ secrets.REGION }}

       - name: List EC2 Instances
         run: |
           instances=$(aws ec2 describe-instances --filters "Name=instance-state-name,Values=pending,running,shutting-down,stopping,stopped" \
             --query 'Reservations[*].Instances[*].[InstanceId,State.Name,PublicIpAddress]' \
             --output table)
           if [ -z "$instances" ]; then
             echo "No instances found."
           else
             echo "$instances"
           fi
